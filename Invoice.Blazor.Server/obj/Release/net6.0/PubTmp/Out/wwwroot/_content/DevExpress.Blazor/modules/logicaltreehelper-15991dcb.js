import{L as t}from"./layouthelper-4b19d191.js";const r=(t,r)=>void 0!==t[r],e=(t,e)=>{const n=e();if(0===n.length)throw new Error("empty interface");for(const e of n)if(!r(t,e))return!1;return!0};class n{static getParent(r,n){var a;return e(r,(()=>["logicalParent"]))&&null!==(a=r.logicalParent)&&void 0!==a?a:t.getParent(r,n)}static findParent(t,r,e=!0){for(const a of n.getRootPath(t,null,e)){if(a&&r(a))return a}return null}static containsElement(t,r){return!!r&&null!==n.findParent(r,(r=>r===t))}static*getRootPath(t,r=null,e=!0){let a=n.getParent(t,e);for(;a&&a!==r;)yield a,a=n.getParent(a,e)}}export{n as L,e as i};
